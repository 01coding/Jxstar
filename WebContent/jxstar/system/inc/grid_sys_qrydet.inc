config.param.hidePageTool = true;	config.eventcfg = {				dataImportParam: function() {			var fkValue = this.grid.fkValue;			if (!fkValue) {				JxHint.alert(jx.bus.text46);//'先选择左边的查询方案，才能添加查询字段！'				return;			}					var grid = this.grid;			var options = {				whereSql: 'fun_col.fun_id = ?',				whereValue: grid.qryFunId,				whereType: 'string'			};			return options;		}	};config.initpage = function(gridNode){ 	var grid = gridNode.page;		grid.on('beforeedit', function(e) {		if (e.field != 'sys_query_det__condtype') return true;		var coltype = e.record.get('sys_query_det__coltype');				var cols = gridNode.config.param.cols, combo = null;		for(var i = 0, n = cols.length; i < n; i++) {			var col = cols[i].col;			var field = cols[i].field;			if (field.name == 'sys_query_det__condtype') {				combo = col.editor;			}		}				if (combo && combo.isXType('combo')) {			var cs = combo.store;			var cr = cs.reader.recordType;			if (coltype == 'string') {				if (cs.getCount() == 5) {					cs.insert(5, new cr({value:'llike', text:jx.query.llike}));					cs.insert(6, new cr({value:'rlike', text:jx.query.rlike}));					cs.insert(7, new cr({value:'like', text:jx.query.like}));				}			} else {				if (cs.getCount() == 8) {					cs.remove(cs.getAt(7));					cs.remove(cs.getAt(6));					cs.remove(cs.getAt(5));				}			}		}		return true;	});};